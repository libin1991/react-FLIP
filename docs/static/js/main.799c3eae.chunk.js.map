{"version":3,"sources":["components/Card/index.js","components/Preview/index.js","App.js","index.js"],"names":["transArr","activeIndex","activeList","rectInfo","updateStatus","zIndex","cardIndex","listData","Array","fill","map","item","index","reverse","getArrByLen","len","Card","listRef","React","createRef","state","animateStatus","inputValue","this","updateAnimateStatus","stepIndex","forEach","itemEle","getBoundingClientRect","left","top","some","v","k","setState","length","setTimeout","type","currentIndex","prototype","slice","call","current","children","newListData","concat","filter","value","e","target","console","log","className","ref","key","style","Object","assign","transform","onClick","updateItem","bind","title","onChange","inputIndex","Component","previewVisibleStatus","currentPreviewEle","previewFirstRect","previewLastRect","scaleValue","width","getSize","height","bgPic","Math","random","toString","substr","round","Preview","previewRef","previewStatus","previewImgInfo","updatePreviewStatus","lastRectInfo","status","previewItem","src","alt","opacity","transformOrigin","onTransitionEnd","transEnd","App","showIndex","mt","window","location","search","match","changeCor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.799c3eae.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\n\nlet transArr = null\nlet activeIndex = 100000\nlet activeList = null\nlet rectInfo = null\n\n\n// 0标识增加，1标识删除\nlet updateStatus = 0\n// 用于调整 card层级，让排列层级变化的 card在动画过程中不被其他 card遮盖\nlet zIndex = 1\nlet cardIndex = 2\n// 生成初始测试数据\nlet listData = Array(cardIndex).fill().map((item, index) => ({\n  index\n})).reverse()\n// 生成一个二维数组\nfunction getArrByLen(len) {\n  return Array(len).fill().map(() => [0, 0])\n}\n\nexport default class Card extends React.Component {\n  listRef = React.createRef()\n  state = {\n    // 用于标记动画的状态\n    animateStatus: 0,\n    listData,\n    inputValue: 0\n  }\n  componentDidUpdate() {\n    // card 更新\n    this.updateAnimateStatus()\n  }\n  updateAnimateStatus() {\n    if (this.state.animateStatus === 1) {\n      // Last + Invert\n      const stepIndex = updateStatus === 0 ? 1 : 0\n      activeList.forEach((itemEle, index) => {\n        rectInfo = itemEle.getBoundingClientRect()\n        transArr[index + stepIndex][0] = transArr[index + stepIndex][0] - rectInfo.left\n        transArr[index + stepIndex][1] = transArr[index + stepIndex][1] - rectInfo.top\n        // 横排的层级变化，则进行 z-index的提升以获得更好的视觉体验\n        if (transArr[index + stepIndex][1] !== 0) {\n          this.state.listData.some((v, k) => {\n            if (index + stepIndex + activeIndex === k) {\n              v.zIndex = zIndex++\n              return true\n            }\n            return false\n          })\n        }\n      })\n      this.setState({\n        animateStatus: 2\n      })\n    } else if (this.state.animateStatus === 2) {\n      // Play\n      // 重置\n      transArr = getArrByLen(this.state.listData.length)\n      setTimeout(() => {\n        this.setState({\n          animateStatus: 3\n        })\n      }, 0)\n    }\n  }\n  updateItem(type, currentIndex) {\n    updateStatus = type\n    activeIndex = currentIndex\n    // 位置需要进行改变的节点（可以大致认为位于当前变化节点之前的所有节点，位置完全不变）\n    // 如果是删除操作，则 slice的起始坐标需要往后移一位\n    activeList = Array.prototype.slice.call(this.listRef.current.children).slice(activeIndex + (updateStatus === 0 ? 0 : 1))\n    // 如果是增加操作，则 transArr2的长度应该比 activeList 多 1\n    const stepIndex = updateStatus === 0 ? 1 : 0   //  0标识增加，1标识删除\n    transArr = getArrByLen(activeList.length + stepIndex)\n    // First\n    activeList.forEach((itemEle, index) => {\n      rectInfo = itemEle.getBoundingClientRect()\n      transArr[index + stepIndex][0] = rectInfo.left\n      transArr[index + stepIndex][1] = rectInfo.top\n    })\n    let newListData = null\n    if (updateStatus === 0) {\n      newListData = this.state.listData.slice(0, activeIndex).concat({\n        index: cardIndex++\n      }, this.state.listData.slice(activeIndex))\n    } else {\n      newListData = this.state.listData.filter((value, index) => index !== activeIndex)\n    }\n    this.setState({\n      animateStatus: 1,\n      listData: newListData\n    })\n  }\n  inputIndex(e) {\n    let inputValue = +e.target.value\n    if (inputValue > this.state.listData.length) {\n      console.log('新增item的 index不能超过 listData的长度')\n      inputValue = this.state.listData.length\n    }\n    this.setState({\n      inputValue,\n      animateStatus: 0\n    })\n  }\n  render() {\n    const { animateStatus, inputValue } = this.state\n    return (\n      <>\n        <ul className=\"card-list\" ref={this.listRef}>\n          {\n            this.state.listData.map((item, index) => (\n              <li\n                key={item.index}\n                className={`card-item${index >= activeIndex && animateStatus === 3 ? ' active' : ''}`}\n                style={\n                  Object.assign({ zIndex: item.zIndex || 'auto' }, index >= activeIndex && animateStatus > 1\n                    ? { transform: `translate(${transArr[index - activeIndex][0]}px, ${transArr[index - activeIndex][1]}px)` }\n                    : null)\n                }>\n                <div className=\"card-title\">\n                  <h3>Title - {item.index}</h3>\n                  <span\n                    onClick={this.updateItem.bind(this, 1, index)}\n                    className=\"icon-btn\" title=\"点击删除\">Delete\n                  </span>\n                </div>\n                <div className=\"card-content\">\n                  <p className=\"content\">content - {item.index}</p>\n                  <p className=\"content\">content - {item.index}</p>\n                  <p className=\"content\">content - {item.index}</p>\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n        <hr />\n        <div className=\"update-count\">\n          <input onChange={this.inputIndex.bind(this)} value={inputValue} type=\"number\" />\n          <button onClick={this.updateItem.bind(this, 0, inputValue)}>增加</button>\n        </div>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport './index.css'\n\n// 标识预览的状态，1：显示，2：开始关闭，3：已关闭\nlet previewVisibleStatus = 3\n// 当前预览的元素\nlet currentPreviewEle = null\n// 记录动画起始状态的元素位置信息，left, top\nconst previewFirstRect = [0, 0]\nconst previewLastRect = [0, 0]\n// 临时记录位置信息\nlet rectInfo = null\n// First与Last两个状态之间的缩放比例\nlet scaleValue = 1\n// 生成初始测试数据\nlet listData = Array(10).fill().map(() => {\n  const width = getSize()\n  const height = getSize()\n  return {\n    width,\n    height,\n    bgPic: `https://dummyimage.com/${width}x${height}/${color16()}`\n  }\n})\n\n// 获取在 200-900之间的随机整数\nfunction getSize () {\n  return Math.round(Math.random() * 700 + 200)\n}\n// 生成随机 16进制颜色\nfunction color16(){\n  return ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6)\n}\n\nexport default class Preview extends React.Component {\n  previewRef = React.createRef()\n  state = {\n    previewStatus: 0,\n    previewImgInfo: null\n  }\n  componentDidUpdate () {\n    // card 预览\n    this.updatePreviewStatus()\n  }\n  updatePreviewStatus () {\n    if (this.state.previewStatus === 1) {\n      // Last + Invert\n      if (previewVisibleStatus === 1) {\n        const lastRectInfo = this.previewRef.current.getBoundingClientRect()\n        previewLastRect[0] = lastRectInfo.left\n        previewLastRect[1] = lastRectInfo.top\n        scaleValue = rectInfo.width / lastRectInfo.width\n      }\n      this.setState({\n        previewStatus: 2\n      })\n    } else if (this.state.previewStatus === 2) {\n      // Play\n      setTimeout(() => {\n        this.setState({\n          previewStatus: 3\n        })\n      }, 0)\n    }\n  }\n  previewItem (status, previewImgInfo = null, e) {\n    previewVisibleStatus = status\n    if (previewVisibleStatus === 1) {\n      currentPreviewEle = e.target\n      // First\n      rectInfo = currentPreviewEle.getBoundingClientRect()\n      previewFirstRect[0] = rectInfo.left\n      previewFirstRect[1] = rectInfo.top\n      this.setState({\n        previewImgInfo,\n        previewStatus: 1\n      })\n    } else {\n      this.setState({\n        previewStatus: 1\n      })\n    }\n  }\n  transEnd (e) {\n    if (previewVisibleStatus === 2 && previewVisibleStatus !== 3) {\n      previewVisibleStatus = 3\n      this.setState({\n        previewStatus: 0\n      })\n    }\n  }\n  render () {\n    const { previewStatus, previewImgInfo } = this.state\n    return (\n      <>\n        <ul className=\"pic-list\">\n          {\n            listData.map((item, index) => (\n              <li\n                key={index}\n                className=\"pic-item\"\n                onClick={this.previewItem.bind(this, 1, item)}\n                title=\"点击预览\">\n                <img src={item.bgPic} alt=\"\" className=\"pic\" />\n              </li>\n            ))\n          }\n        </ul>\n        {\n          (previewVisibleStatus === 1 || previewVisibleStatus === 2) ? (\n            <>\n              <div className=\"preview-box\"\n                onClick={this.previewItem.bind(this, 2)}\n                style={{\n                  opacity: previewStatus === 3 && previewVisibleStatus !== 2 ? .65 : 0\n                }}></div>\n              <img\n                ref={this.previewRef}\n                className={`img${(previewStatus === 3 && previewVisibleStatus === 1) || previewVisibleStatus === 2 ? ' active' : ''}`}\n                src={previewImgInfo.bgPic}\n                style={{\n                  transform: previewStatus === 2 || previewVisibleStatus === 2\n                    ? `translate3d(${previewFirstRect[0] - previewLastRect[0]}px, ${previewFirstRect[1] - previewLastRect[1]}px, 0) scale(${scaleValue})`\n                    : 'translate3d(0, 0, 0) scale(1)',\n                  transformOrigin: '0 0'\n                }}\n                onClick={this.previewItem.bind(this, 2)}\n                onTransitionEnd={this.transEnd.bind(this)}\n                alt=\"\" />\n            </>\n          ) : null\n        }\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css'\n\n// 卡片 Card增删动画\nimport Card from './components/Card'\n// 图片放大/恢复动画\nimport Preview from './components/Preview'\n\nclass App extends Component {\n  state = {\n    showIndex: 0\n  }\n  componentDidMount () {\n    const mt = window.location.search.match(/showIndex=(\\d)/)\n    if (mt) {\n      this.setState({\n        showIndex: +mt[1]\n      })\n    }\n  }\n  changeCor (showIndex) {\n    this.setState({\n      showIndex\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"route\">\n          <span onClick={this.changeCor.bind(this, 0)}>点击切换到 卡片增删动效</span>\n          <span onClick={this.changeCor.bind(this, 1)}>点击切换到 图片放大预览/活肤动效</span>\n        </div>\n        <hr/>\n        {\n          this.state.showIndex === 0\n            ? <Card />\n            : <Preview />\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}